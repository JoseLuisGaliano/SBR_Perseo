//created on: Oct 26, 2024
package rules

//list any import classes here.
import ser.*;
import objeto.*;
import relaciones.*;
import dsi.CondicionParada;
import dsi.TiposParada;
import org.kie.api.runtime.rule.QueryResults;
import org.kie.api.runtime.rule.QueryResultsRow;

//declare any global variables here
global CondicionParada condicionParada;

// Queries

query getInventario(Ser ser)
	$posee : Posee (poseedor == ser)
end

query getCapacidades(Ser ser)
	$capacidades : Capacidades (poseedor == ser)
end

query getHijos(Ser ser)
	Familia (padre == ser, $hijo : hijo)
end

// Reglas generales

// 1.1 - Si existe un mortal x que tiene el favor de un dios y, x obtiene los objetos de y
rule "Mortal obtiene objetos de los dioses que le favorecen"
	when
		$dios : Dios()
		$mortal : Mortal()
		Favor (favorecedor == $dios, favorecido == $mortal)
		not Apresa (apresado == $mortal) // Necesitas estar libre para poder recibir objetos
	then
		// Le damos los objetos al mortal
		QueryResults results = kcontext.getKieRuntime().getQueryResults("getInventario", $dios);
		for (QueryResultsRow row : results) {
			Posee p = (Posee) row.get("$posee");
			p.setPoseedor($mortal);
			update(p);			
			System.out.println($mortal.getNombre_ser() + " obtiene " + p.getObjeto().getNombre_objeto() + " debido a tener el favor de " + $dios.getNombre_ser());

			// Parada?
			if(condicionParada.getTipo() == TiposParada.OBTENER_OBJETO) {
				if(condicionParada.getPersonaje().contains($mortal.getNombre_ser()) && p.getObjeto().getNombre_objeto().equals(condicionParada.getObjetivo())) {
					System.out.println();
					System.out.println("CONCLUSIÓN: " + $mortal.getNombre_ser() + " sí puede obtener el objeto" + p.getObjeto().getNombre_objeto());
					kcontext.getKieRuntime().halt();
				}
			}
		}
		
		// Le quitamos las capacidades a los dioses
		results = kcontext.getKieRuntime().getQueryResults("getCapacidades", $dios);
		for (QueryResultsRow row : results) {
			Capacidades c = (Capacidades) row.get("$capacidades");
			System.out.println($dios.getNombre_ser() + " pierde la capacidad " + c.getCapacidad());
			retract(c);
		}
end

// 1.2 - Si existe un ser x que tiene un objeto especial y con propiedad z, se añade la capacidad z al ser x
rule "Ser obtiene las capacidades de sus objetos especiales"
	when
		$objeto : ObjetoEspecial($propiedad : tiene_propiedad)
		$ser : Ser()
		Posee (poseedor == $ser, objeto == $objeto)
		not Capacidades (poseedor == $ser, capacidad == $propiedad)
	then	
		Capacidades c = new Capacidades($ser, $propiedad);
		insert(c);
		System.out.println($ser.getNombre_ser() + " obtiene Capacidad " + $objeto.getTiene_propiedad() + " debido a tener " + $objeto.getNombre_objeto());
		
		// Parada?
		if(condicionParada.getTipo() == TiposParada.OBTENER_CAPACIDAD) {
			if(condicionParada.getPersonaje().contains($ser.getNombre_ser()) && $propiedad.toString().equals(condicionParada.getObjetivo())) {
				System.out.println();
				System.out.println("CONCLUSIÓN: " + $ser.getNombre_ser() + " sí puede obtener la capacidad " + $objeto.getTiene_propiedad());
				kcontext.getKieRuntime().halt();
			}
		}
end

// 1.3 - Si un ser x mata a otro ser y, x obtiene los objetos de y
rule "Ser obtiene los objetos del ser al que mata"
	when
		$matado : Ser()
		$matador : Ser()
		Mata (matador == $matador, matado == $matado)
		Posee (poseedor == $matado) // Para evitar que se lance la regla constantemente
	then
		// Le damos los objetos al matador
		QueryResults results = kcontext.getKieRuntime().getQueryResults("getInventario", $matado);
		for (QueryResultsRow row : results) {
			Posee p = (Posee) row.get("$posee");
			p.setPoseedor($matador);
			update(p);			
			System.out.println($matador.getNombre_ser() + " obtiene " + p.getObjeto().getNombre_objeto() + " debido a matar a " + $matado.getNombre_ser());
			
			// Parada?
			if(condicionParada.getTipo() == TiposParada.OBTENER_OBJETO) {
				if(condicionParada.getPersonaje().contains($matador.getNombre_ser()) && p.getObjeto().getNombre_objeto().equals(condicionParada.getObjetivo())) {
					System.out.println();
					System.out.println("CONCLUSIÓN: " + $matador.getNombre_ser() + " sí puede obtener el objeto" + p.getObjeto().getNombre_objeto());
					kcontext.getKieRuntime().halt();
				}
			}
		}
end

// 1.4 - Si un ser x mata a otro ser y, y este ser y había apresado a otro ser z, x libera a z
rule "Ser libera al apresado de a quien haya matado"
	salience -1
	when
		$apresador : Ser()
		$matador : Ser()
		$apresado : Ser()
		Mata (matador == $matador, matado == $apresador)
		$apresa : Apresa (apresador == $apresador, apresado == $apresado)
	then
		retract($apresa);
		Libera l = new Libera($matador, $apresado);
		insert(l);
		System.out.println($matador.getNombre_ser() + " libera a " + $apresado.getNombre_ser() + " debido a matar a " + $apresador.getNombre_ser());
		
		// Parada?
		if(condicionParada.getTipo() == TiposParada.LIBERAR_PERSONAJE) {
			if(condicionParada.getPersonaje().contains($matador.getNombre_ser()) && $apresado.getNombre_ser().equals(condicionParada.getObjetivo())) {
				System.out.println();
				System.out.println("CONCLUSIÓN: " + $matador.getNombre_ser() + " sí puede liberar a " + $apresado.getNombre_ser());
				kcontext.getKieRuntime().halt();
			}
		}
end

// Reglas específicas del mito de Casiopea

// 2.1 - Si existe un humano con nombre Casiopea, Casiopea tiene el enojo de un dios con nombre Poseidon, y Poseidon no ha liberado ya alguna criatura, una criatura marina es liberada por Poseidon
rule "Poseidon libera a Criatura Marina"
    when 
        $criatura : CriaturaMarina()
        $dios : Dios (nombre_ser == "Poseidon")
        $humano : Humano (nombre_ser == "Casiopea")
        Enojo (enojador == $humano, enojado == $dios)
        not Libera (liberado == $criatura)
        not Libera (liberador == $dios)
    then   
        Libera l = new Libera($dios, $criatura);
        insert(l);       	
        System.out.println($criatura.getNombre_ser() + " queda libre debido a el enojo de " + $dios.getNombre_ser() + " hacia " + $humano.getNombre_ser());
end

// 2.2 - Si existe una criatura marina y esta ha sido liberada por algún ser x, el humano de nombre Andromeda es apresado por la criatura marina
rule "Criatura Marina apresa a Andromeda"   
    when    
        $criatura : CriaturaMarina()
        $humano : Humano(nombre_ser == "Andromeda")
        Libera (liberado == $criatura)
        not Apresa (apresado == $humano)
        not Libera (liberado == $humano)
    then   
    	Apresa a = new Apresa($criatura, $humano);
   		insert(a);
        System.out.println($humano.getNombre_ser() + " queda presa debido a estar " + $criatura.getNombre_ser() + " libre");
end

// 2.3 - Si existe un semidios x que tiene el favor de un Dios llamado Hermes, el favor de un Dios llamado Atenea y la capacidad Invisibilidad, x tiene el favor de el dios llamado Las Grayas
rule "Semidios obtiene favor Grayas"
	when	
		$semidios : Semidios()
		$dios1 : Dios (nombre_ser == "Hermes")
		$dios2 : Dios (nombre_ser == "Atenea")
		$deidadmenor : DeidadMenor(nombre_ser == "Las Grayas")
		Favor (favorecedor == $dios1, favorecido == $semidios)
		Favor (favorecedor == $dios2, favorecido == $semidios)
		Capacidades (poseedor == $semidios, capacidad == Propiedad.INVISIBILIDAD)
		not Favor (favorecedor == $deidadmenor, favorecido == $semidios)
		not Apresa (apresado == $semidios) // Necesitas estar libre para desplazarte a donde esten las Grayas
	then		
		Favor f = new Favor($deidadmenor, $semidios);
		insert(f);	
		System.out.println($semidios.getNombre_ser() + " localiza a las Grayas debido a tener el favor de Hermes y Atenea.");
		System.out.println($semidios.getNombre_ser() + " obtiene el Ojo/Diente de las Grayas debido tener Invisibilidad y las Grayas localizada.");
		System.out.println($semidios.getNombre_ser() + " obtiene el favor de las Grayas debido al intercambio de Ojo/Diente de las Grayas a las Grayas");
end

// 2.4 - Si existe un semidios x que tiene el favor de un Dios llamado Las Grayas, x tiene el favor de el Dios llamado Ninfas
rule "Semidios obtiene favor Ninfas"
	when
		$semidios : Semidios()
		$dios1 : Dios (nombre_ser == "Las Grayas")
		$dios2 : Dios (nombre_ser == "Las Ninfas")
		Favor (favorecedor == $dios1, favorecido == $semidios)
		not Favor (favorecedor == $dios2, favorecido == $semidios)
		not Apresa (apresado == $semidios) // Necesitas estar libre para desplazarte a donde esten las Ninfas
	then
		Favor f = new Favor($dios2, $semidios);
		insert(f);
		System.out.println($semidios.getNombre_ser() + " localiza a las Ninfas debido a tener el favor de las Grayas");
end

// 2.5 - Si existe un semidios x que tiene las capacidades Vuelo, Invisibilidad y Reflejo, y que tiene un arma (o superfuerza), x mata al Dios llamado Medusa
rule "Semidios mata a Medusa"
	when
		$semidios : Semidios()
		$arma : Arma()
		$dios: Dios (nombre_ser == "Medusa", vivo == true)
		Capacidades (poseedor == $semidios, capacidad == Propiedad.VUELO)
		Capacidades (poseedor == $semidios, capacidad == Propiedad.INVISIBILIDAD)
		Capacidades (poseedor == $semidios, capacidad == Propiedad.REFLEJO)
		(Posee (poseedor == $semidios, objeto == $arma) or Capacidades (poseedor == $semidios, capacidad == Propiedad.SUPERFUERZA))
		not Apresa (apresado == $semidios) // Necesitas estar libre para desplazarte a donde esta Medusa
	then
		Mata m = new Mata($semidios, $dios);
		insert(m);
		modify($dios){
			setVivo(false);
		}
		
		System.out.println($semidios.getNombre_ser() + " mata a Medusa debido a tener Vuelo, Invisibilidad, Espejo y un arma");
end

// 2.6 - Si existe un semidios x que tiene el objeto llamado Cabeza de Medusa y no tiene el objeto Zurrón Mágico, x muere
rule "Semidios muere si mata a Medusa sin el Zurron Magico"    
    when
    	$objeto1 : Objeto(nombre_objeto == "Cabeza de Medusa")
    	$objeto2 : Objeto(nombre_objeto == "Zurron Magico")
        $semidios : Semidios(vivo == true) 
        Posee (poseedor == $semidios, objeto == $objeto1)
        not Posee (poseedor == $semidios, objeto == $objeto2)
    then
        modify($semidios) {
            setVivo(false);
        }        
        System.out.println($semidios.getNombre_ser() + " muere al coger la cabeza de Medusa sin tener el Zurron Magico");
end

// 2.7 - Si existe un semidios x que tiene la capacidad Petrificar y existe una criatura marina que haya apresado a un humano llamado Andromeda, x mata a Criatura Marina
rule "Semidios mata a Criatura Marina"
	when
		$semidios : Semidios (vivo == true)
		$criatura : CriaturaMarina (vivo == true)
		$humano : Humano (nombre_ser == "Andromeda");
		$capacidad : Capacidades (poseedor == $semidios, capacidad == Propiedad.PETRIFICAR)
		Apresa (apresador == $criatura, apresado == $humano)
		not Apresa (apresado == $semidios) // Necesitas estar libre para desplazarte a donde esta Ceto
	then
		Mata m = new Mata($semidios, $criatura);
		insert(m);
		modify($criatura) {
			setVivo(false);
		}
		System.out.println($semidios.getNombre_ser() + " mata Ceto debido a tener la capacidad " + $capacidad.getCapacidad());
end

// 2.8 - Si existe un semidios x que tiene el objeto llamado Bridas de Oro, x obtiene el objeto llamado Pegaso
rule "Semidios obtiene a Pegaso"
	when
		$semidios : Semidios()
		$objeto1 : Objeto (nombre_objeto == "Bridas de Oro")
		$objeto2 : Objeto (nombre_objeto == "Pegaso")
		Posee (poseedor == $semidios, objeto == $objeto1)
		not Posee (poseedor == $semidios, objeto == $objeto2)
		not Apresa (apresado == $semidios) // Necesitas estar libre para desplazarte a donde esta Pegaso
	then
		Posee p = new Posee($semidios, $objeto2);
		insert(p);
		System.out.println($semidios.getNombre_ser() + " obtiene a Pegaso debido a tener las Bridas de Oro.");
end

// Reglas específicas del mito de Teseo

// 3.1 - Si existe el semidios llamado Teseo y Teseo es apresado por un Dios llamado Minos, el Semidios llamado Ariadna le da su hilo a Teseo
rule "Teseo recibe hilo"
	when
		$semidios : Semidios(nombre_ser == "Teseo")
		$dios : Dios(nombre_ser == "Minos")
		$ariadna : Semidios(nombre_ser == "Ariadna")
		$objeto : Objeto(nombre_objeto == "Hilo de Ariadna")
		Apresa (apresador == $dios, apresado == $semidios)
		$p : Posee (poseedor == $ariadna, objeto == $objeto)
	then
		modify($p) {
			setPoseedor($semidios);
		}
		System.out.println($semidios.getNombre_ser() + " recibe el hilo de Ariadna");
end
// NOTA: Se ha optado por poner que es específicamente Teseo quien recibe el hilo ya que el motivo de que lo reciba es porque Ariadna se enamora de él, por lo tanto tiene sentido especificar ya que Ariadna no se enamora de cualquier semidios x, sino de Teseo

// 3.2 - Si existe un semidios x apresado por un Dios llamado Minos y x tiene un arma (o superfuerza), x mata a la Criatura llamada Minotauro
rule "Semidios mata a Minotauro"
	when
		$semidios : Semidios()
		$dios : Dios(nombre_ser == "Minos")
		$arma : Arma()
		$criatura : Criatura (nombre_ser == "Minotauro", vivo == true)
		Apresa (apresador == $dios, apresado == $semidios)
		(Posee (poseedor == $semidios, objeto == $arma) or Capacidades (poseedor == $semidios, capacidad == Propiedad.SUPERFUERZA))
	then
		Mata m = new Mata($semidios, $criatura);
		insert(m);
		modify($criatura) {
			setVivo(false);
		}
		System.out.println($semidios.getNombre_ser() + " mata al Minotauro");
end

// 3.3 - Si existe un semidios x apresado por un Dios llamado Minos, x tiene el Objeto llamado Hilo de Ariadna y la Criatura llamada Minotauro esta muerta, x escapa
rule "Semidios escapa del laberinto con el hilo"
	when
		$semidios : Semidios()
		$dios : Dios(nombre_ser == "Minos")
		$criatura : Criatura (nombre_ser == "Minotauro", vivo == false)
		$objeto : Objeto(nombre_objeto == "Hilo de Ariadna")
		$a : Apresa (apresador == $dios, apresado == $semidios)
		Posee (poseedor == $semidios, objeto == $objeto)
	then
		retract($a);
		Libera l = new Libera($semidios, $semidios);
		insert(l);
		System.out.println($semidios.getNombre_ser() + " ha escapado del laberinto debido a tener el hilo de Ariadna y estar el Minotauro muerto"); 
end

// 3.4 - Si existe un semidios x que haya matado a la Criatura Minotauro y x ha escapado, el Dios Minos se enoja con el Humano Dedalo
rule "Minos se enfada con Dedalo"
	when
		$semidios : Semidios()
		$criatura : Criatura (nombre_ser == "Minotauro", vivo == false)
		$dios : Dios(nombre_ser == "Minos")
		$humano : Humano(nombre_ser == "Dedalo")
		Mata (matador == $semidios, matado == $criatura)
		Libera (liberador == $semidios, liberado == $semidios)
	then
		Enojo e = new Enojo($humano, $dios);
		insert(e);
		System.out.println("Minos se enoja con Dédalo debido al escape de " + $semidios.getNombre_ser());
end

// 3.5 - Si existe un ser x que tiene el enojo del Dios llamado Minos, Minos apresa a x y a sus hijos
rule "Minos apresa a sus enemigos y sus familias"
	when
		$dios : Dios(nombre_ser == "Minos")
		$mortal : Mortal()
		Enojo (enojador == $mortal, enojado == $dios)
	then
		Apresa aPadre = new Apresa($dios, $mortal);
		insert(aPadre);
		System.out.println("Minos apresa a " + $mortal.getNombre_ser());
		
		QueryResults results = kcontext.getKieRuntime().getQueryResults("getHijos", $mortal);
		for (QueryResultsRow row : results) {
			Ser hijo = (Ser) row.get("$hijo");
			Apresa a = new Apresa($dios, hijo);
			insert(a);
			System.out.println("Minos apresa a " + hijo.getNombre_ser() + " debido a ser hijo de " + $mortal.getNombre_ser());
		}
end

// 3.6 - Si existe un ser x apresado por un Dios llamado Minos y la Criatura Minotauro está muerta, x obtiene el Objeto llamado Alas de Icaro
rule "Ser encuentra las alas en el laberinto"
	when
		$ser : Ser()
		$dios : Dios(nombre_ser == "Minos")
		$criatura : Criatura (nombre_ser == "Minotauro", vivo == false)
		$objeto : Objeto(nombre_objeto == "Alas de Icaro")
		Apresa (apresador == $dios, apresado == $ser)
	then
		Posee p = new Posee($ser, $objeto);
		insert(p);
		System.out.println($ser.getNombre_ser() + " construye las alas de Ícaro debido a que el minotauro está muerto");
end

// 3.7 - Si existe un ser x apresado por un Dios llamado Minos y x tiene la capacidad Vuelo, x escapa
rule "Ser escapa del laberinto volando"
	when
		$ser : Ser()
		$dios : Dios(nombre_ser == "Minos")
		$a : Apresa (apresador == $dios, apresado == $ser)
		Capacidades (poseedor == $ser, capacidad == Propiedad.VUELO)
	then
		retract($a);
		Libera l = new Libera($ser, $ser);
		insert(l);
		System.out.println($ser.getNombre_ser() + " escapa del laberinto debido a tener la capacidad Vuelo");
end

// 3.8 - Si existe un Humano llamado Icaro que ha escapado y que tenga el Objeto llamado Alas de Icaro, Icaro muere
rule "Icaro vuela demasiado cerca del sol"
	when
		$humano : Humano (nombre_ser == "Icaro", vivo == true)
		$objeto : Objeto(nombre_objeto == "Alas de Icaro")
		Posee (poseedor == $humano, objeto == $objeto)
		Libera (liberador == $humano, liberado == $humano)
	then
		modify($humano) {
			setVivo(false);
		}
		System.out.println("Ícaro vuela demasiado alto con las alas y se muere");
end

// Reglas específicas para todos los mitos

// 4.1 - Si existe un Ser x que posee el Objeto llamado Zurron Magico, existe un Ser z que haya escapado del laberinto, y z posee un Objeto llamado Alas de Icaro, entonces x obtiene Alas de Icaro
rule "Ser recibe alas de quien haya escapado con ellas"
	when
		$semidios : Semidios ()
		$escapado : Ser (vivo == true)
		$objeto1 : Objeto (nombre_objeto == "Alas de Icaro")
		$objeto2 : Objeto (nombre_objeto == "Zurron Magico")
		$p : Posee (poseedor == $escapado, objeto == $objeto1)
		Posee (poseedor == $semidios, objeto == $objeto2)
		Libera (liberador == $escapado, liberado == $escapado)
		not Posee (poseedor == $semidios, objeto == $objeto1)
	then
		modify($p) {
			setPoseedor($semidios);
		}
		System.out.println($escapado.getNombre_ser() + " le da sus alas a " + $semidios.getNombre_ser() + " tras haber escapado del laberinto");
end
// NOTA: x tiene que poseer Zurron Magico porque demuestra que tiene la intencion de obtener la cabeza de Medusa y por tanto liberar a Andromeda

// 4.2 - Si existe un semidios llamado Heracles hijo del Dios llamado Zeus, y Heracles no esta apresado, Heracles tiene las capacidades Superfuerza y Vuelo
rule "Heracles se libera y tiene todas las capacidades al empezar"
	salience 1
	when
		$semidios : Semidios(nombre_ser == "Heracles")
		$dios: Dios (nombre_ser == "Zeus")
		Familia (padre == $dios, hijo == $semidios)
		not Apresa (apresador == $dios, apresado == $semidios)
	then
		Capacidades c1 = new Capacidades($semidios, Propiedad.SUPERFUERZA);
		insert(c1);
		Capacidades c2 = new Capacidades($semidios, Propiedad.VUELO);
		insert(c2);
		System.out.println($semidios.getNombre_ser() + " obtiene Capacidad SUPERFUERZA y Capacidad VUELO debido a que su padre es Zeus");
		
		// Parada?
		if(condicionParada.getTipo() == TiposParada.OBTENER_CAPACIDAD) {
			if($semidios.getNombre_ser().equals(condicionParada.getPersonaje()) && Propiedad.SUPERFUERZA.name().equals(condicionParada.getObjetivo())) {
				System.out.println();
				System.out.println("CONCLUSIÓN: " + $semidios.getNombre_ser() + " sí puede obtener la capacidad " + Propiedad.SUPERFUERZA);
				kcontext.getKieRuntime().halt();
			}
		}
end

// Reglas específicas para el mito del Toro Blanco

// 5.1 - Si existe un semidios llamado Heracles, existe un dios llamado Minos, y Minos ha apresado a un Humano llamado Casiopea, Heracles enoja a Minos
rule "Heracles enoja a Minos para ser encerrado"
	when
		$semidios : Semidios (nombre_ser == "Heracles")
		$dios : Dios (nombre_ser == "Minos")
		$humano : Humano (nombre_ser == "Casiopea")
		Apresa (apresador == $dios, apresado == $humano)
	then
		Enojo e = new Enojo($semidios, $dios);
		insert(e);
		System.out.println($semidios.getNombre_ser() + " enoja a " + $dios.getNombre_ser() + " para colarse en el laberinto");
end

// 5.2 - Si existe una Criatura llamada Minotauro, existe un Ser x que haya matado a Minotauro, x no ha sido apresado ya, existe una Criatura c que sea padre de Minotauro, y c no esta apresado, c apresa a x
rule "Toro Blanco apresa a Heracles"
	when		
		$ser : Ser ()
		$criatura : Criatura (vivo == true)
		$minotauro : Criatura (nombre_ser == "Minotauro")
		Mata (matador == $ser, matado == $minotauro)
		Familia (padre == $criatura, hijo == $minotauro)
		not Apresa (apresado == $criatura)
		not Apresa (apresado == $ser)
	then
		Apresa a = new Apresa($criatura, $ser);
		insert(a);
		System.out.println($criatura.getNombre_ser() + " apresa a " + $ser.getNombre_ser() + " debido a que ha matado a su hijo, " + $minotauro.getNombre_ser());
end

// 5.3 - Si existen tres Semidioses x1, x2 y x3, al menos uno de ellos tiene la Capacidad Petrificar, existe un Semidios x4 apresado por una Criatura y, y x4 es hijo del Dios llamado Zeus, x1, x2 y x3 matan a y.
rule "Perseo y Teseo matan al Toro Blanco"
	when
		$semidios1 : Semidios ()
		$semidios2 : Semidios (this != $semidios1)
		$semidios3 : Semidios (this != $semidios1 && this != $semidios2)
		$semidios4 : Semidios (this != $semidios1 && this != $semidios2 && this != $semidios3)
		$criatura : Criatura (vivo == true)
		$dios : Dios (nombre_ser == "Zeus")
		(Capacidades (poseedor == $semidios1, capacidad == Propiedad.PETRIFICAR) or Capacidades (poseedor == $semidios2, capacidad == Propiedad.PETRIFICAR) or Capacidades (poseedor == $semidios3, capacidad == Propiedad.PETRIFICAR))
		Apresa (apresador == $criatura, apresado == $semidios4)
		Familia (padre == $dios, hijo == $semidios4)
	then
		Mata m1 = new Mata($semidios1, $criatura);
		insert(m1);
		Mata m2 = new Mata($semidios2, $criatura);
		insert(m2);
		Mata m3 = new Mata($semidios3, $criatura);
		insert(m3);
		modify($criatura) {
			setVivo(false);
		}
		System.out.println($semidios1.getNombre_ser() +  ", " + $semidios2.getNombre_ser() + " y " + $semidios3.getNombre_ser() + " colaboran para matar a " + $criatura.getNombre_ser() + " debido a que al menos uno de ellos tiene la capacidad PETRIFICAR");
end